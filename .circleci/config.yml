version: 2
jobs:
  build:
    docker:
      - image: microsoft/dotnet:2.2-sdk-alpine
    steps:
      - checkout
      - run: 
            name: Build solution
            command : | 
                dotnet restore
                dotnet build
  test_unit_testing:
    docker:
      - image: microsoft/dotnet:2.2-sdk-alpine
    steps:
      - run: 
            name: Test Solution
            command : echo "todo"
  test_code_quality:
    docker:
      - image: microsoft/dotnet:2.2-sdk-alpine
    steps:
      - run: 
            name: Test Code Quality
            command : echo "todo"
  release_nuget_packages:
    docker:
      - image: microsoft/dotnet:2.2-sdk-alpine
    steps:
      - checkout
      - run: 
            name: Build ChickenAPI package (nuget)
            command : | 
                chmod +X scripts/change_nuspec_versions.sh && scripts/change_nuspec_versions.sh $CIRCLE_TAG
                chmod +x scripts/build_packages.sh && scripts/build_packages.sh
                dotnet nuget push $PACKAGE_PATH/nupkgs/ChickenAPI.Core.$CIRCLE_TAG.nupkg -k $NUGET_API_KEY -s "https://api.nuget.org/v3/index.json"
                dotnet nuget push $PACKAGE_PATH/nupkgs/ChickenAPI.Packets.$CIRCLE_TAG.nupkg -k $NUGET_API_KEY -s "https://api.nuget.org/v3/index.json"
                dotnet nuget push $PACKAGE_PATH/nupkgs/ChickenAPI.Enums.$CIRCLE_TAG.nupkg -k $NUGET_API_KEY -s "https://api.nuget.org/v3/index.json"
                dotnet nuget push $PACKAGE_PATH/nupkgs/ChickenAPI.Data.$CIRCLE_TAG.nupkg -k $NUGET_API_KEY -s "https://api.nuget.org/v3/index.json"
                dotnet nuget push $PACKAGE_PATH/nupkgs/ChickenAPI.Game.$CIRCLE_TAG.nupkg -k $NUGET_API_KEY -s "https://api.nuget.org/v3/index.json"
                dotnet nuget push $PACKAGE_PATH/nupkgs/ChickenAPI.Game.Extensions.$CIRCLE_TAG.nupkg -k $NUGET_API_KEY -s "https://api.nuget.org/v3/index.json"
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test_unit_testing:
          requires:
            - build
      - test_code_quality:
          requires:
            - build
      - release_nuget_packages:
          filters:  # using regex filters requires the entire branch to match
            tags:
              only: /^\A((\d+\.)+\d+)\z/
            branches:
              only:  # only branches matching the below regex filters will run
                - develop
                - master